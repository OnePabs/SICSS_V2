/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package StorageManager;

//implementation("com.sun.net.httpserver:http:20070405")

import com.sun.net.httpserver.HttpServer;
import java.net.InetSocketAddress;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

import StorageManager.Endpoints.*;

public class App {

    public static void main(String[] args) {
        int port = 8080;
        if(args.length >= 1){
            port = Integer.valueOf(args[0]);
        }
        System.out.println("Resource Manager Running on port: " + port);

        boolean isVerbose = false;
        if(args.length >= 2){
            isVerbose = Boolean.valueOf(args[1]);
        }
        System.out.println("Resource Manager isVerbose: " + isVerbose);

        HttpServer server;
        MysqlApi mysqlapi = new MysqlApi();
        MeasurementController measurementController = new MeasurementController();

        try{

            //initialize server
            server = HttpServer.create(new InetSocketAddress("0.0.0.0",port), 0);

            //server.createContext("/data", new Data(conn));
            server.createContext("/insertone", new InsertOne(mysqlapi,measurementController,isVerbose));
            server.createContext("/commitall", new CommitAll(mysqlapi,measurementController,isVerbose));
            server.createContext("/measurements", new Measurements(measurementController,isVerbose));

            server.createContext("/test", new Test());
            server.setExecutor(null);

            //start server
            server.start();

        } catch(Exception e){
            e.printStackTrace();
        }

    }
}
